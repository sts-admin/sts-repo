CREATE TABLE TWITTERPROFILE (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, EMAIL VARCHAR(255), PHONENUMBER VARCHAR(255), TWITTERID VARCHAR(255), TWITTERTOKEN VARCHAR(255), UPDATEDBYID BIGINT, USERID BIGINT, USERNAME VARCHAR(255), VERIFIED TINYINT(1) default 0, VERSION BIGINT, PHOTOID BIGINT, PRIMARY KEY (ID));
CREATE TABLE ERRORLOG (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, ERRORCODE VARCHAR(255), errorData LONGTEXT, errorText LONGTEXT, serviceUrl LONGTEXT, UPDATEDBYID BIGINT, VERSION BIGINT, PRIMARY KEY (ID));
CREATE TABLE PASSWORDRESETHISTORY (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, NEWPASSWORD VARCHAR(255), OLDPASSWORD VARCHAR(255), OTP VARCHAR(255), UPDATEDBYID BIGINT, VERSION BIGINT, EXISTINGUSERID BIGINT, PRIMARY KEY (ID));
CREATE TABLE USERMAILHISTORY (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, content LONGTEXT, CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, EMAIL VARCHAR(255), EVENT VARCHAR(255), UPDATEDBYID BIGINT, VERSION BIGINT, PRIMARY KEY (ID));
CREATE TABLE FACEBOOKPROFILE (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, EMAIL VARCHAR(255), FACEBOOKID VARCHAR(255), FACEBOOKTOKEN LONGTEXT, UPDATEDBYID BIGINT, USERID BIGINT, USERNAME VARCHAR(255), VERIFIED TINYINT(1) default 0, VERSION BIGINT, PHOTOID BIGINT, PRIMARY KEY (ID));
CREATE TABLE ADDRESS (ID BIGINT AUTO_INCREMENT NOT NULL, APPARTMENT VARCHAR(255), ARCHIVED TINYINT(1) default 0, CITY VARCHAR(255), CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, LATITUDE DOUBLE, LONGITUDE DOUBLE, PLACEID VARCHAR(255), STREET VARCHAR(255), UPDATEDBYID BIGINT, USERID BIGINT, VERSION BIGINT, ZIPCODE VARCHAR(255), COUNTRYID BIGINT NOT NULL, STATEID BIGINT NOT NULL, PRIMARY KEY (ID));
CREATE TABLE USER (ID BIGINT AUTO_INCREMENT NOT NULL, ABOUTME VARCHAR(255), ARCHIVED TINYINT(1) default 0, AVTARIMAGE VARCHAR(255), CONTACT VARCHAR(255), CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, EMAIL VARCHAR(255), FIRSTLOGIN TINYINT(1) default 0, FIRSTNAME VARCHAR(255), GENDER VARCHAR(255), LASTNAME VARCHAR(255), MIDDLENAME VARCHAR(255), PASSWORD VARCHAR(255), TYPE INTEGER, UPDATEDBYID BIGINT, USERNAME VARCHAR(255), VERIFICATIONCODE VARCHAR(255), VERIFIED TINYINT(1) default 0, VERSION BIGINT, PHOTOID BIGINT, PRIMARY KEY (ID));
CREATE TABLE COUNTRY (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, COUNTRYCODE VARCHAR(255), COUNTRYNAME VARCHAR(255), PRIMARY KEY (ID));
CREATE TABLE LINKEDINPROFILE (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, CREATEDBYID BIGINT, DATECREATED DATETIME, DATEUPDATED DATETIME, LINKEDINID VARCHAR(255), LINKEDINTOKEN VARCHAR(255), PHONENUMBER VARCHAR(255), UPDATEDBYID BIGINT, USERNAME VARCHAR(255), VERIFIED TINYINT(1) default 0, VERSION BIGINT, PHOTOID BIGINT, PRIMARY KEY (ID));
CREATE TABLE IMAGE (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, CONTENTTYPE VARCHAR(255), CREATEDBYID BIGINT, CREATEDNAME VARCHAR(255), DATECREATED DATETIME, DATEUPDATED DATETIME, EXTENSION VARCHAR(255), ORIGINALNAME VARCHAR(255), OTHER VARCHAR(255), SIZE VARCHAR(255), UPDATEDBYID BIGINT, VERSION BIGINT, PRIMARY KEY (ID));
CREATE TABLE STATE (ID BIGINT AUTO_INCREMENT NOT NULL, ARCHIVED TINYINT(1) default 0, STATECODE VARCHAR(255), STATENAME VARCHAR(255), COUNTRYID BIGINT NOT NULL, PRIMARY KEY (ID));
ALTER TABLE TWITTERPROFILE ADD CONSTRAINT FK_TWITTERPROFILE_PHOTOID FOREIGN KEY (PHOTOID) REFERENCES IMAGE (ID);
ALTER TABLE PASSWORDRESETHISTORY ADD CONSTRAINT FK_PASSWORDRESETHISTORY_EXISTINGUSERID FOREIGN KEY (EXISTINGUSERID) REFERENCES USER (ID);
ALTER TABLE FACEBOOKPROFILE ADD CONSTRAINT FK_FACEBOOKPROFILE_PHOTOID FOREIGN KEY (PHOTOID) REFERENCES IMAGE (ID);
ALTER TABLE ADDRESS ADD CONSTRAINT FK_ADDRESS_COUNTRYID FOREIGN KEY (COUNTRYID) REFERENCES COUNTRY (ID);
ALTER TABLE ADDRESS ADD CONSTRAINT FK_ADDRESS_STATEID FOREIGN KEY (STATEID) REFERENCES STATE (ID);
ALTER TABLE USER ADD CONSTRAINT FK_USER_PHOTOID FOREIGN KEY (PHOTOID) REFERENCES IMAGE (ID);
ALTER TABLE LINKEDINPROFILE ADD CONSTRAINT FK_LINKEDINPROFILE_PHOTOID FOREIGN KEY (PHOTOID) REFERENCES IMAGE (ID);
ALTER TABLE STATE ADD CONSTRAINT FK_STATE_COUNTRYID FOREIGN KEY (COUNTRYID) REFERENCES COUNTRY (ID);
